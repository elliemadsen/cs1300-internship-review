[{"C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\App.js":"1","C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\FilteredList.js":"2","C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\DisplayList.js":"3","C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\index.js":"4","C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\Body.jsx":"5","C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\Footer.jsx":"6","C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\Header.jsx":"7","C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\App.test.js":"8","C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\FavoritesList.jsx":"9"},{"size":1063,"mtime":1606700066724,"results":"10","hashOfConfig":"11"},{"size":9146,"mtime":1606828012433,"results":"12","hashOfConfig":"11"},{"size":2044,"mtime":1606828127834,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"11"},{"size":4884,"mtime":1606827546577,"results":"15","hashOfConfig":"11"},{"size":233,"mtime":1606700172183,"results":"16","hashOfConfig":"11"},{"size":687,"mtime":1606700443716,"results":"17","hashOfConfig":"11"},{"size":246,"mtime":499162500000,"results":"18","hashOfConfig":"11"},{"size":412,"mtime":1606827881373,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gldqba",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\App.js",[],"C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\FilteredList.js",["40","41","42"],"import React from \"react\";\r\nimport { Navbar, NavItem, NavDropdown, MenuItem, Nav } from 'react-bootstrap'\r\n// import Navbar from '@bit/react-bootstrap.react-bootstrap.navbar';\r\n// import {NavBar, Nav, NavItem} from 'react-bootstrap';\r\nimport DisplayList from './DisplayList.js'\r\nimport {ButtonToolbar, DropdownButton, Dropdown, Button} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\n// FilteredList.js - contains filtering/sorting/aggregator methods\r\n// This component contains all of the web appâ€™s major functionalities. This include filtering, sorting, and addTo/removeFrom aggregator. \r\n\r\nexport default class FilteredList extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      // We will be keeping track of the selected size as a state. A state is a variable which is remembered when the component re-renders. \r\n      this.state = { \r\n        company: \"All\",\r\n        position: \"All\",\r\n        location: \"All\",\r\n        industry: \"All\",\r\n        sortYear: false,\r\n        sortRating: false\r\n      }\r\n    }\r\n\r\n    // sets the state to the selected industry, function passed to the onSelect event handler of HTML buttons\r\n    onSelectFilterIndustry = event => {\r\n        this.setState({\r\n            industry: event\r\n        })\r\n    };\r\n\r\n    // sets the state to the selected company, function passed to the onSelect event handler of HTML buttons\r\n    onSelectFilterCompany = event => {\r\n        this.setState({\r\n            company: event\r\n        })\r\n    };\r\n\r\n    // sets the state to the selected position, function passed to the onSelect event handler of HTML buttons\r\n    onSelectFilterPosition = event => {\r\n        this.setState({\r\n            position: event\r\n        })\r\n    };\r\n\r\n    // sets the state to the selected location, function passed to the onSelect event handler of HTML buttons\r\n    onSelectFilterLocation = event => {\r\n        this.setState({\r\n            location: event\r\n        })\r\n    };\r\n\r\n    onSelectReset = event => {\r\n        this.setState({\r\n            company: event,\r\n            position: event,\r\n            location: event,\r\n            industry: event\r\n        })\r\n    };\r\n\r\n    matchesFilter = item => {\r\n        if(this.state.company !== \"All\" && this.state.company !== item.company) {\r\n            return false\r\n        }\r\n        if(this.state.industry !== \"All\" && !item.industry.includes(this.state.industry)) {\r\n            return false\r\n        }\r\n        if(this.state.position !== \"All\" && !item.position.includes(this.state.position)) {\r\n            return false\r\n        }\r\n        if(this.state.location !== \"All\" && !item.location.includes(this.state.location)) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    onSelectSortYear = event => {\r\n        this.setState({\r\n            sortYear: event.target.checked\r\n        });\r\n      }\r\n\r\n      onSelectSortRating = event => {\r\n        this.setState({\r\n            sortRating: event.target.checked\r\n        });\r\n      }\r\n  \r\n      sort = (a, b) => {\r\n        // Sort by year only\r\n        if (this.state.sortYear && !this.state.sortRating) {\r\n            if (a.year > b.year) {\r\n              return -1;\r\n            } else if (a.year < b.year) {\r\n              return 1;\r\n            } else {\r\n              return 0;\r\n            }\r\n        }\r\n        // Sort by rating only\r\n        if (this.state.sortRating && !this.state.sortYear) {\r\n          if (a.rating > b.rating) {\r\n            return -1;\r\n          } else if (a.rating < b.rating) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        }\r\n        // Both - sort by rating, then year\r\n        if (this.state.sortRating && this.state.sortYear) {\r\n            if (a.rating > b.rating) {\r\n                return -1;\r\n              } else if (a.rating < b.rating) {\r\n                return 1;\r\n              } else {\r\n                if (a.year > b.year) {\r\n                    return -1;\r\n                  } else if (a.year < b.year) {\r\n                    return 1;\r\n                  } else {\r\n                    return 0;\r\n                  }\r\n              }\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonToolbar className=\"button-toolbar\">\r\n                    <DropdownButton title=\"Industry\" className=\"dropdown\" id=\"dropdown-basic\" variant=\"success\">\r\n                        <Dropdown.Item eventKey=\"All\" onSelect={this.onSelectFilterIndustry}> All </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"FinTech\" onSelect={this.onSelectFilterIndustry}> FinTech </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Healthcare\" onSelect={this.onSelectFilterIndustry}> Healthcare </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Social Networking\" onSelect={this.onSelectFilterIndustry}> Social Networking </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"EdTech\" onSelect={this.onSelectFilterIndustry}> EdTech </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Cloud/Enterprise\" onSelect={this.onSelectFilterIndustry}> Cloud/Enterprise </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Other\" onSelect={this.onSelectFilterIndustry}> Other </Dropdown.Item>\r\n                    </DropdownButton>\r\n                    <DropdownButton title=\"Company\" className=\"dropdown\" id=\"dropdown-basic\" variant=\"success\">\r\n                        <Dropdown.Item eventKey=\"All\" onSelect={this.onSelectFilterCompany}> All </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Pinterest\" onSelect={this.onSelectFilterCompany}> Pinterest </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Google\" onSelect={this.onSelectFilterCompany}> Google </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Facebook\" onSelect={this.onSelectFilterCompany}> Facebook </Dropdown.Item>\r\n                    </DropdownButton>\r\n                    <DropdownButton title=\"Position\" className=\"dropdown\" id=\"dropdown-basic\" variant=\"success\">\r\n                        <Dropdown.Item eventKey=\"All\" onSelect={this.onSelectFilterPosition}> All </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Software Engineer Intern\" onSelect={this.onSelectFilterPosition}> Software Engineer </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Data Science Intern\" onSelect={this.onSelectFilterPosition}> Data Science </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Product Manager Intern\" onSelect={this.onSelectFilterPosition}> Product Manager </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Security Intern\" onSelect={this.onSelectFilterPosition}> Security </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"UIUX Intern\" onSelect={this.onSelectFilterPosition}> UIUX/Frontend </Dropdown.Item>\r\n                    </DropdownButton>\r\n                    <DropdownButton title=\"Location\" className=\"dropdown\" id=\"dropdown-basic\" variant=\"success\">\r\n                        <Dropdown.Item eventKey=\"All\" onSelect={this.onSelectFilterLocation}> All </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Seattle, WA\" onSelect={this.onSelectFilterLocation}> Seattle, WA </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"San Francisco, CA\" onSelect={this.onSelectFilterLocation}> San Francisco, CA </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"New York, NY\" onSelect={this.onSelectFilterLocation}> New York, NY </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Boston, MA\" onSelect={this.onSelectFilterLocation}> Boston, MA </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Austin, TX\" onSelect={this.onSelectFilterLocation}> Austin, TX </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Chicago, IL\" onSelect={this.onSelectFilterLocation}> Chicago, IL </Dropdown.Item>\r\n                    </DropdownButton>\r\n                    <Button eventKey=\"All\" onSelect={this.onSelectReset} variant=\"success\">Reset</Button>\r\n                <Navbar bg=\"light\">\r\n                    <Nav>\r\n                        <div>\r\n                            <form>\r\n                                <label>\r\n                                    Sort by &nbsp;\r\n                                    <input type=\"checkbox\" onChange={this.onSelectSortYear} />\r\n                                    Year\r\n                                </label>\r\n                                <label>\r\n                                    &nbsp;\r\n                                    <input type=\"checkbox\" onChange={this.onSelectSortRating} />\r\n                                    Rating\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                    </Nav>\r\n                </Navbar>\r\n                </ButtonToolbar>\r\n\r\n \r\n                <DisplayList list={this.props.list.filter(this.matchesFilter).sort(this.sort)} onSelectFavorite={this.props.onSelectFavorite}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\DisplayList.js",[],"C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\index.js",[],["43","44"],"C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\Body.jsx",[],"C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\Footer.jsx",[],"C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\Header.jsx",[],"C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\App.test.js",[],"C:\\Users\\ellie\\onedrive\\documents\\uiux\\development\\intern-review\\src\\FavoritesList.jsx",[],{"ruleId":"45","severity":1,"message":"46","line":2,"column":18,"nodeType":"47","messageId":"48","endLine":2,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":2,"column":27,"nodeType":"47","messageId":"48","endLine":2,"endColumn":38},{"ruleId":"45","severity":1,"message":"50","line":2,"column":40,"nodeType":"47","messageId":"48","endLine":2,"endColumn":48},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},"no-unused-vars","'NavItem' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'MenuItem' is defined but never used.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-global-assign","no-unsafe-negation"]